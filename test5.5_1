using System;
using System.Collections.Generic;
using System.Threading;

namespace School
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandOpenBag = "1";
            const string CommandOpenStore = "2";
            const string CommandExit = "3";

            Console.ForegroundColor = ConsoleColor.White;

            Player player = new Player();
            Seller seller = new Seller();
            Shop shop = new Shop();

            bool isStoreActive = true;

            while (isStoreActive)
            {
                Console.WriteLine($"Hello, Welcome!\n\nYour Balance: {player.TakeBallance()} || Seller Balance: {seller.TakeBallance()}\n\n");
                shop.WriteMainText(CommandOpenBag, CommandOpenStore, CommandExit);

                switch (Console.ReadLine())
                {
                    case CommandOpenBag:
                        shop.OpenPlayerBag(player);
                        break;

                    case CommandOpenStore:
                        shop.OperationWithSeller(seller, player);
                        break;

                    case CommandExit:
                        isStoreActive = false;
                        break;
                }
                Console.Clear();
            }
            Console.Clear();
        }
    }

    class Shop
    {
        public void OperationWithSeller(Seller seller, Player player)
        {
            bool canBuy = false;

            seller.ShowBag();

            Console.Write("Write the index of item you want to buy : ");

            if (int.TryParse(Console.ReadLine(), out int index))
            {
                if (seller.TryGetItem(index - 1, out Item item))
                {
                    canBuy = player.CanBuy(item);

                    if (canBuy)
                    {
                        seller.SellItem(item);
                        player.BuyItem(item);
                    }
                    else
                    {
                        WriteText("Not Enought money!", ConsoleColor.Red);
                        Thread.Sleep(1000);
                    }
                }
                else
                {
                    WriteText("Item not Found", ConsoleColor.Red);
                    Thread.Sleep(1000);
                }
            }
            else
            {
                WriteText("Invalid Format", ConsoleColor.Red);
                Thread.Sleep(1000);
            }

            Console.Clear();
        }

        public void WriteMainText(string CommandOpenBag, string CommandOpenStore, string CommandExit)
        {
            Console.WriteLine($"To Open Bag press - {CommandOpenBag}\n\nTo Open Store press - {CommandOpenStore}\n\nTo Exit press - {CommandExit}");
        }

        public void OpenPlayerBag(Player player)
        {
            player.ShowBag();
            Console.ReadLine();
        }

        public void WriteText(string Text, ConsoleColor color = ConsoleColor.White)
        {
            Console.ForegroundColor = color;
            Console.WriteLine(Text);
            Console.ForegroundColor = ConsoleColor.White;
        }
    }

    class Seller : Character
    {
        public Seller()
        {
            AddItems();
        }

        public void SellItem(Item item)
        {
            Money += item.Price;
            Item.Remove(item);
        }

        public bool TryGetItem(int index, out Item item)
        {
            if (index >= 0 && index < Item.Count)
            {
                item = Item[index];
                return item != null;
            }
            else
            {
                item = null;
                return false;
            }
        }

        private void AddItems()
        {
            Item.Add(new Item("Golden Bow", 100));
            Item.Add(new Item("Emerald Dagger", 50));
            Item.Add(new Item("Platinum Hammer", 75));
            Item.Add(new Item("Sapphire Staff", 200));
            Item.Add(new Item("Ruby Ring", 25));
            Item.Add(new Item("Amethyst Pickaxe", 120));
            Item.Add(new Item("Bronze Sword", 30));
        }
    }

    class Player : Character
    {
        public bool CanBuy(Item item)
        {
            if (item.Price <= TakeBallance())
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        public void BuyItem(Item item)
        {
            if (item != null)
            {
                Money -= item.Price;
                Item.Add(item);
            }
        }
    }

    class Item
    {
        public Item(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }
    }

    class Character
    {
        protected List<Item> Item = new List<Item>();

        protected int Money = 100;

        public int TakeBallance()
        {
            return Money;
        }

        public void ShowBag()
        {
            Console.Clear();
            Console.WriteLine("Your inventory: \n");

            Console.ForegroundColor = ConsoleColor.Green;

            for (int i = 0; i < Item.Count; i++)
            {
                int index = i + 1;

                Console.WriteLine($"| Index - {index} | Items Name - {Item[i].Name} | Price - {Item[i].Price}");
            }

            Console.ForegroundColor = ConsoleColor.White;
        }
    }
}
