using System;
using System.Collections.Generic;
using System.Threading;

namespace School
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandOpenBag = "1";
            const string CommandOpenStore = "2";
            const string CommandExit = "3";

            Console.ForegroundColor = ConsoleColor.White;

            Player player = new Player();
            Program program = new Program();
            Store store = new Store();

            bool isStoreActive = true;

            while (isStoreActive)
            {
                Console.WriteLine($"Hello, Welcome!\n\nYour Balance: {player.Money}\n\n");
                program.WriteMainText(CommandOpenBag, CommandOpenStore, CommandExit);

                switch (Console.ReadLine())
                {
                    case CommandOpenBag:
                        player.OpenBag();
                        break;

                    case CommandOpenStore:
                        program.OperationWithStore(store, player);
                        break;

                    case CommandExit:
                        isStoreActive = false;
                        break;
                }
                Console.Clear();
            }
            Console.Clear();
        }

        private void OperationWithStore(Store store, Player player)
        {
            store.OpenStore();

            Console.Write("Write the index of item you want to buy : ");

            if (int.TryParse(Console.ReadLine(), out int index))
            {
                Item item = store.GiveItem(index);

                if (item != null)
                {
                    if (item.Price <= player.Money)
                    {
                        store.SellItem(item);
                        player.BuyItem(item);
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.WriteLine("Not Enought money!");
                        Console.ForegroundColor = ConsoleColor.White;

                        Thread.Sleep(1000);
                    }
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine("Item not Found");
                    Console.ForegroundColor = ConsoleColor.White;

                    Thread.Sleep(1000);
                }
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("Invalid Format");
                Console.ForegroundColor = ConsoleColor.White;

                Thread.Sleep(1000);
            }

            Console.Clear();
        }

        private void WriteMainText(string CommandOpenBag, string CommandOpenStore, string CommandExit)
        {
            Console.WriteLine($"To Open Bag press - {CommandOpenBag}\n\nTo Open Store press - {CommandOpenStore}\n\nTo Exit press - {CommandExit}");
        }
    }

    class Store
    {
        private List<Item> _allItems = new List<Item>();

        public Store()
        {
            AddItems();
        }

        public void OpenStore()
        {
            Console.Clear();
            Console.WriteLine("Choose a product! ");

            for (int i = 0; i < _allItems.Count; i++)
            {
                Console.WriteLine($"| Index - {_allItems[i].Index} | Items Name - {_allItems[i].Name} | Price - {_allItems[i].Price}");
            }
        }

        public void SellItem(Item item)
        {
            _allItems.Remove(item);
        }

        public Item GiveItem(int index)
        {
            Item item = _allItems.Find(i => i.Index == index);
            return item;
        }

        private void AddItems()
        {
            _allItems.Add(new Item("Golden Bow", 100, 1));
            _allItems.Add(new Item("Emerald Dagger", 50, 2));
            _allItems.Add(new Item("Platinum Hammer", 75, 3));
            _allItems.Add(new Item("Sapphire Staff", 200, 4));
            _allItems.Add(new Item("Ruby Ring", 25, 5));
            _allItems.Add(new Item("Amethyst Pickaxe", 120, 6));
            _allItems.Add(new Item("Bronze Sword", 30, 7));
        }
    }

    class Player
    {
        private List<Item> _bag = new List<Item>();

        public int Money { get; private set; } = 300;

        public void BuyItem(Item item)
        {
            if (item != null)
            {
                Money -= item.Price;
                _bag.Add(item);
            }
        }

        public void OpenBag()
        {
            int oneSecond = 1000;

            if (_bag.Count != 0)
            {
                Console.Clear();
                Console.WriteLine("Your inventory: \n");

                Console.ForegroundColor = ConsoleColor.Green;

                for (int i = 0; i < _bag.Count; i++)
                {
                    Console.WriteLine(_bag[i].Name + "\n");
                }

                Console.ForegroundColor = ConsoleColor.White;
                Console.ReadLine();
                Console.Clear();
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("Your bag is empty");
                Console.ForegroundColor = ConsoleColor.White;

                Thread.Sleep(oneSecond);
                Console.Clear();
            }
        }
    }

    class Item
    {
        public Item(string name, int price, int index)
        {
            Name = name;
            Price = price;
            Index = index;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }
        public int Index { get; private set; }
    }
}
