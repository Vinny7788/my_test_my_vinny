using System;
using System.Collections.Generic;
using System.Threading;

namespace School
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandOpenBag = "1";
            const string CommandOpenStore = "2";
            const string CommandExit = "3";

            Console.ForegroundColor = ConsoleColor.White;

            Player player = new Player(); ;
            Seller seller = new Seller();

            bool isStoreActive = true;

            while (isStoreActive)
            {
                Console.WriteLine($"Hello, Welcome!\n\nYour Balance: {player.ShowBallance()} || Seller Balance: {seller.ShowBallance()}\n\n");
                WriteMainText(CommandOpenBag, CommandOpenStore, CommandExit);

                switch (Console.ReadLine())
                {
                    case CommandOpenBag:
                        PlayerBag(player);
                        break;

                    case CommandOpenStore:
                        OperationWithSeller(seller, player);
                        break;

                    case CommandExit:
                        isStoreActive = false;
                        break;
                }
                Console.Clear();
            }
            Console.Clear();
        }

        static void OperationWithSeller(Seller seller, Player player)
        {
            seller.OpenBag();

            Console.Write("Write the index of item you want to buy : ");

            if (int.TryParse(Console.ReadLine(), out int index))
            {
                if (seller.TryGetItem(index, out Item item))
                {
                    if (item.Price <= player.ShowBallance())
                    {
                        seller.SellItem(item);
                        player.BuyItem(item);
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.WriteLine("Not Enought money!");
                        Console.ForegroundColor = ConsoleColor.White;

                        Thread.Sleep(1000);
                    }
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine("Item not Found");
                    Console.ForegroundColor = ConsoleColor.White;

                    Thread.Sleep(1000);
                }
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("Invalid Format");
                Console.ForegroundColor = ConsoleColor.White;

                Thread.Sleep(1000);
            }

            Console.Clear();
        }

        static void WriteMainText(string CommandOpenBag, string CommandOpenStore, string CommandExit)
        {
            Console.WriteLine($"To Open Bag press - {CommandOpenBag}\n\nTo Open Store press - {CommandOpenStore}\n\nTo Exit press - {CommandExit}");
        }

        static void PlayerBag(Player player)
        {
            player.OpenBag();
            Console.ReadLine();
        }
    }

    class Seller : Inventory
    {
        public Seller()
        {
            AddItems();
        }

        public void SellItem(Item item)
        {
            _money += item.Price;
            _item.Remove(item);
        }

        public Item GiveItem(int index)
        {
            Item item = _item.Find(i => i.Index == index);
            return item;
        }

        private void AddItems()
        {
            _item.Add(new Item("Golden Bow", 100, 1));
            _item.Add(new Item("Emerald Dagger", 50, 2));
            _item.Add(new Item("Platinum Hammer", 75, 3));
            _item.Add(new Item("Sapphire Staff", 200, 4));
            _item.Add(new Item("Ruby Ring", 25, 5));
            _item.Add(new Item("Amethyst Pickaxe", 120, 6));
            _item.Add(new Item("Bronze Sword", 30, 7));
        }

        public bool TryGetItem(int index, out Item item)
        {
            item = _item.Find(i => i.Index == index);
            return item != null;
        }
    }

    class Player : Inventory
    {
        public void BuyItem(Item item)
        {
            if (item != null)
            {
                _money -= item.Price;
                _item.Add(item);
            }
        }
    }

    class Item
    {
        public Item(string name, int price, int index)
        {
            Name = name;
            Price = price;
            Index = index;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }
        public int Index { get; private set; }
    }

    class Inventory
    {
        protected List<Item> _item = new List<Item>();

        protected int _money = 500;

        public int ShowBallance()
        {
            return _money;
        }

        public void OpenBag()
        {
            Console.Clear();
            Console.WriteLine("Your inventory: \n");

            Console.ForegroundColor = ConsoleColor.Green;

            for (int i = 0; i < _item.Count; i++)
            {
                Console.WriteLine($"| Index - {_item[i].Index} | Items Name - {_item[i].Name} | Price - {_item[i].Price}");
            }

            Console.ForegroundColor = ConsoleColor.White;
        }
    }
}
